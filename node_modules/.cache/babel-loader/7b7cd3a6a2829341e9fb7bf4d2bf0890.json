{"remainingRequest":"/Users/dokyun.kim/mapbox-pwa/node_modules/babel-loader/lib/index.js!/Users/dokyun.kim/mapbox-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dokyun.kim/mapbox-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/dokyun.kim/mapbox-pwa/src/components/gps.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/dokyun.kim/mapbox-pwa/src/components/gps.vue","mtime":1629447242617},{"path":"/Users/dokyun.kim/mapbox-pwa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dokyun.kim/mapbox-pwa/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dokyun.kim/mapbox-pwa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dokyun.kim/mapbox-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE1hcGJveCBmcm9tICJtYXBib3gtZ2wiOyAvLyBpbXBvcnQgeyBNZ2xNYXAgfSBmcm9tICJ2dWUtbWFwYm94IjsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWFwYm94OiBudWxsLAogICAgICBhY2Nlc3NUb2tlbjogJ3BrLmV5SjFJam9pYlc5dVozUmxJaXdpWVNJNkltTnJjblF3ZVRseVlUbHRkWE16TVd3emEzTndaM2c0YlRRaWZRLnhxcGRLT0s2YlV3RmFzUFAzSmtxSEEnLAogICAgICAvLyB5b3VyIGFjY2VzcyB0b2tlbi4gTmVlZGVkIGlmIHlvdSB1c2luZyBNYXBib3ggbWFwcwogICAgICBtYXBTdHlsZTogJ21hcGJveDovL3N0eWxlcy9tYXBib3gvbGlnaHQtdjEwJwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLm1hcGJveCA9IE1hcGJveDsgLy8gV2UgbmVlZCB0byBzZXQgbWFwYm94LWdsIGxpYnJhcnkgaGVyZSBpbiBvcmRlciB0byB1c2UgaXQgaW4gdGVtcGxhdGUKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLm1hcGJveC5hY2Nlc3NUb2tlbiA9ICdway5leUoxSWpvaWJXOXVaM1JsSWl3aVlTSTZJbU5yY25Rd2VUbHlZVGx0ZFhNek1Xd3phM053WjNnNGJUUWlmUS54cXBkS09LNmJVd0Zhc1BQM0prcUhBJzsKICAgIHZhciBtYXAgPSBuZXcgdGhpcy5tYXBib3guTWFwKHsKICAgICAgY29udGFpbmVyOiB0aGlzLiRyZWZzWydtYXAtYm94J10sCiAgICAgIHN0eWxlOiAnbWFwYm94Oi8vc3R5bGVzL21hcGJveC9saWdodC12MTAnLAogICAgICBjZW50ZXI6IFstNzQuMDA2NiwgNDAuNzEzNV0sCiAgICAgIHpvb206IDE1LjUsCiAgICAgIHBpdGNoOiA0NSwKICAgICAgYmVhcmluZzogLTE3LjYsCiAgICAgIGFudGlhbGlhczogdHJ1ZQogICAgfSk7CiAgICBtYXAub24oJ2xvYWQnLCBmdW5jdGlvbiAoKSB7CiAgICAgIC8vIEluc2VydCB0aGUgbGF5ZXIgYmVuZWF0aCBhbnkgc3ltYm9sIGxheWVyLgogICAgICB2YXIgbGF5ZXJzID0gbWFwLmdldFN0eWxlKCkubGF5ZXJzOwogICAgICB2YXIgbGFiZWxMYXllcklkOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXllcnMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAobGF5ZXJzW2ldLnR5cGUgPT09ICdzeW1ib2wnICYmIGxheWVyc1tpXS5sYXlvdXRbJ3RleHQtZmllbGQnXSkgewogICAgICAgICAgbGFiZWxMYXllcklkID0gbGF5ZXJzW2ldLmlkOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CgogICAgICB2YXIgb3B0aW9ucyA9IHsKICAgICAgICAnaWQnOiAnYWRkLTNkLWJ1aWxkaW5ncycsCiAgICAgICAgJ3NvdXJjZSc6ICdjb21wb3NpdGUnLAogICAgICAgICdzb3VyY2UtbGF5ZXInOiAnYnVpbGRpbmcnLAogICAgICAgICdmaWx0ZXInOiBbJz09JywgJ2V4dHJ1ZGUnLCAndHJ1ZSddLAogICAgICAgICd0eXBlJzogJ2ZpbGwtZXh0cnVzaW9uJywKICAgICAgICAnbWluem9vbSc6IDE1LAogICAgICAgICdwYWludCc6IHsKICAgICAgICAgICdmaWxsLWV4dHJ1c2lvbi1jb2xvcic6ICcjYWFhJywKICAgICAgICAgIC8vIFVzZSBhbiAnaW50ZXJwb2xhdGUnIGV4cHJlc3Npb24gdG8KICAgICAgICAgIC8vIGFkZCBhIHNtb290aCB0cmFuc2l0aW9uIGVmZmVjdCB0bwogICAgICAgICAgLy8gdGhlIGJ1aWxkaW5ncyBhcyB0aGUgdXNlciB6b29tcyBpbi4KICAgICAgICAgICdmaWxsLWV4dHJ1c2lvbi1oZWlnaHQnOiBbJ2ludGVycG9sYXRlJywgWydsaW5lYXInXSwgWyd6b29tJ10sIDE1LCAwLCAxNS4wNSwgWydnZXQnLCAnaGVpZ2h0J11dLAogICAgICAgICAgJ2ZpbGwtZXh0cnVzaW9uLWJhc2UnOiBbJ2ludGVycG9sYXRlJywgWydsaW5lYXInXSwgWyd6b29tJ10sIDE1LCAwLCAxNS4wNSwgWydnZXQnLCAnbWluX2hlaWdodCddXSwKICAgICAgICAgICdmaWxsLWV4dHJ1c2lvbi1vcGFjaXR5JzogMC42CiAgICAgICAgfQogICAgICB9OwogICAgICBjb25zb2xlLmxvZygnMTExMScpOwogICAgICBtYXAuYWRkTGF5ZXIob3B0aW9ucywgbGFiZWxMYXllcklkKTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgb25NYXBMb2FkZWQ6IGZ1bmN0aW9uIG9uTWFwTG9hZGVkKCkgey8vIEluc2VydCB0aGUgbGF5ZXIgYmVuZWF0aCBhbnkgc3ltYm9sIGxheWVyLgogICAgICAvLyBjb25zdCBhc3luY0FjdGlvbnMgPSBldmVudC5jb21wb25lbnQuYWN0aW9ucwogICAgICAvLyBjb25zdCBuZXdQYXJhbXMgPSBhd2FpdCBhc3luY0FjdGlvbnMuZmx5VG8oewogICAgICAvLyAgIGNlbnRlcjogWy03NC4wMDY2LCA0MC43MTM1XSwKICAgICAgLy8gICB6b29tOiAxNS41LAogICAgICAvLyAgIHBpdGNoOiA0NSwKICAgICAgLy8gICBiZWFyaW5nOiAtMTcuNiwKICAgICAgLy8gICBhbnRpYWxpYXM6IHRydWUKICAgICAgLy8gfSkKICAgICAgLy8gY29uc29sZS5sb2coJz8/PycsIGV2ZW50Lm1hcCkKICAgICAgLy8gdGhpcy5tYXAgPSBldmVudC5tYXA7CiAgICAgIC8vIHZhciBsYXllcnMgPSB0aGlzLm1hcC5nZXRTdHlsZSgpLmxheWVyczsKICAgICAgLy8gdmFyIGxhYmVsTGF5ZXJJZDsKICAgICAgLy8gZm9yICh2YXIgaSA9IDA7IGkgPCBsYXllcnMubGVuZ3RoOyBpKyspIHsKICAgICAgLy8gICBpZiAobGF5ZXJzW2ldLnR5cGUgPT09ICdzeW1ib2wnICYmIGxheWVyc1tpXS5sYXlvdXRbJ3RleHQtZmllbGQnXSkgewogICAgICAvLyAgICAgbGFiZWxMYXllcklkID0gbGF5ZXJzW2ldLmlkOwogICAgICAvLyAgICAgYnJlYWs7CiAgICAgIC8vICAgfQogICAgICAvLyB9CiAgICAgIC8vIGNvbnN0IG9wdGlvbnMgPSB7CiAgICAgIC8vICAgJ2lkJzogJ2FkZC0zZC1idWlsZGluZ3MnLAogICAgICAvLyAgICdzb3VyY2UnOiAnY29tcG9zaXRlJywKICAgICAgLy8gICAnc291cmNlLWxheWVyJzogJ2J1aWxkaW5nJywKICAgICAgLy8gICAnZmlsdGVyJzogWyc9PScsICdleHRydWRlJywgJ3RydWUnXSwKICAgICAgLy8gICAndHlwZSc6ICdmaWxsLWV4dHJ1c2lvbicsCiAgICAgIC8vICAgJ21pbnpvb20nOiAxNSwKICAgICAgLy8gICAncGFpbnQnOiB7CiAgICAgIC8vICAgICAnZmlsbC1leHRydXNpb24tY29sb3InOiAnI2FhYScsCiAgICAgIC8vICAgICAvLyBVc2UgYW4gJ2ludGVycG9sYXRlJyBleHByZXNzaW9uIHRvCiAgICAgIC8vICAgICAvLyBhZGQgYSBzbW9vdGggdHJhbnNpdGlvbiBlZmZlY3QgdG8KICAgICAgLy8gICAgIC8vIHRoZSBidWlsZGluZ3MgYXMgdGhlIHVzZXIgem9vbXMgaW4uCiAgICAgIC8vICAgICAnZmlsbC1leHRydXNpb24taGVpZ2h0JzogWwogICAgICAvLyAgICAgICAnaW50ZXJwb2xhdGUnLAogICAgICAvLyAgICAgICBbJ2xpbmVhciddLAogICAgICAvLyAgICAgICBbJ3pvb20nXSwKICAgICAgLy8gICAgICAgMTUsCiAgICAgIC8vICAgICAgIDAsCiAgICAgIC8vICAgICAgIDE1LjA1LAogICAgICAvLyAgICAgICBbJ2dldCcsICdoZWlnaHQnXQogICAgICAvLyAgICAgXSwKICAgICAgLy8gICAgICdmaWxsLWV4dHJ1c2lvbi1iYXNlJzogWwogICAgICAvLyAgICAgICAnaW50ZXJwb2xhdGUnLAogICAgICAvLyAgICAgICBbJ2xpbmVhciddLAogICAgICAvLyAgICAgICBbJ3pvb20nXSwKICAgICAgLy8gICAgICAgMTUsCiAgICAgIC8vICAgICAgIDAsCiAgICAgIC8vICAgICAgIDE1LjA1LAogICAgICAvLyAgICAgICBbJ2dldCcsICdtaW5faGVpZ2h0J10KICAgICAgLy8gICAgIF0sCiAgICAgIC8vICAgICAnZmlsbC1leHRydXNpb24tb3BhY2l0eSc6IDAuNgogICAgICAvLyAgIH0KICAgICAgLy8gfQogICAgICAvLyBjb25zb2xlLmxvZygnMTExMScpCiAgICAgIC8vIHRoaXMubWFwLmFkZExheWVyKG9wdGlvbnMsIGxhYmVsTGF5ZXJJZCkKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/dokyun.kim/mapbox-pwa/src/components/gps.vue"],"names":[],"mappings":"AAOA,OAAO,MAAP,MAAmB,WAAnB,C,CACA;;AAEA,eAAe;AACb,EAAA,IADa,kBACN;AACL,WAAO;AACL,MAAA,MAAM,EAAE,IADH;AAEL,MAAA,WAAW,EAAE,0FAFR;AAEoG;AACzG,MAAA,QAAQ,EAAE;AAHL,KAAP;AAKD,GAPY;AASb,EAAA,OATa,qBASH;AACR,SAAK,MAAL,GAAc,MAAd,CADQ,CAER;AACD,GAZY;AAab,EAAA,OAba,qBAaH;AAER,SAAK,MAAL,CAAY,WAAZ,GAA0B,0FAA1B;AACA,QAAM,GAAE,GAAI,IAAI,KAAK,MAAL,CAAY,GAAhB,CAAoB;AAC9B,MAAA,SAAS,EAAE,KAAK,KAAL,CAAW,SAAX,CADmB;AAE9B,MAAA,KAAK,EAAE,kCAFuB;AAG9B,MAAA,MAAM,EAAE,CAAC,CAAC,OAAF,EAAW,OAAX,CAHsB;AAI9B,MAAA,IAAI,EAAE,IAJwB;AAK9B,MAAA,KAAK,EAAE,EALuB;AAM9B,MAAA,OAAO,EAAE,CAAC,IANoB;AAO9B,MAAA,SAAS,EAAE;AAPmB,KAApB,CAAZ;AAUA,IAAA,GAAG,CAAC,EAAJ,CAAO,MAAP,EAAe,YAAM;AACnB;AACA,UAAI,MAAK,GAAI,GAAG,CAAC,QAAJ,GAAe,MAA5B;AACA,UAAI,YAAJ;;AACA,WAAK,IAAI,CAAA,GAAI,CAAb,EAAgB,CAAA,GAAI,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,YAAI,MAAM,CAAC,CAAD,CAAN,CAAU,IAAV,KAAmB,QAAnB,IAA+B,MAAM,CAAC,CAAD,CAAN,CAAU,MAAV,CAAiB,YAAjB,CAAnC,EAAmE;AACjE,UAAA,YAAW,GAAI,MAAM,CAAC,CAAD,CAAN,CAAU,EAAzB;AACA;AACF;AACF;;AAEA,UAAM,OAAM,GAAI;AACd,cAAM,kBADQ;AAEd,kBAAU,WAFI;AAGd,wBAAgB,UAHF;AAId,kBAAU,CAAC,IAAD,EAAO,SAAP,EAAkB,MAAlB,CAJI;AAKd,gBAAQ,gBALM;AAMd,mBAAW,EANG;AAOd,iBAAS;AACP,kCAAwB,MADjB;AAGP;AACA;AACA;AACA,mCAAyB,CACvB,aADuB,EAEvB,CAAC,QAAD,CAFuB,EAGvB,CAAC,MAAD,CAHuB,EAIvB,EAJuB,EAKvB,CALuB,EAMvB,KANuB,EAOvB,CAAC,KAAD,EAAQ,QAAR,CAPuB,CANlB;AAeP,iCAAuB,CACrB,aADqB,EAErB,CAAC,QAAD,CAFqB,EAGrB,CAAC,MAAD,CAHqB,EAIrB,EAJqB,EAKrB,CALqB,EAMrB,KANqB,EAOrB,CAAC,KAAD,EAAQ,YAAR,CAPqB,CAfhB;AAwBP,oCAA0B;AAxBnB;AAPK,OAAhB;AAmCA,MAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AAEA,MAAA,GAAG,CAAC,QAAJ,CAAa,OAAb,EAAsB,YAAtB;AACD,KAjDD;AAkDD,GA5EY;AA6Eb,EAAA,OAAO,EAAE;AACP,IAAA,WADO,yBACO,CACZ;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACF;AA/DO;AA7EI,CAAf","sourcesContent":["<template>\n  <section class=\"mapbox\">\n    <div id=\"map-box\" ref=\"map-box\"></div>\n  </section>\n</template>\n\n<script>\nimport Mapbox from \"mapbox-gl\";\n// import { MglMap } from \"vue-mapbox\";\n\nexport default {\n  data() {\n    return {\n      mapbox: null,\n      accessToken: 'pk.eyJ1IjoibW9uZ3RlIiwiYSI6ImNrcnQweTlyYTltdXMzMWwza3NwZ3g4bTQifQ.xqpdKOK6bUwFasPP3JkqHA', // your access token. Needed if you using Mapbox maps\n      mapStyle: 'mapbox://styles/mapbox/light-v10',\n    };\n  },\n\n  created() {\n    this.mapbox = Mapbox;\n    // We need to set mapbox-gl library here in order to use it in template\n  },\n  mounted() {\n\n    this.mapbox.accessToken = 'pk.eyJ1IjoibW9uZ3RlIiwiYSI6ImNrcnQweTlyYTltdXMzMWwza3NwZ3g4bTQifQ.xqpdKOK6bUwFasPP3JkqHA'\n    const map = new this.mapbox.Map({\n      container: this.$refs['map-box'],\n      style: 'mapbox://styles/mapbox/light-v10',\n      center: [-74.0066, 40.7135],\n      zoom: 15.5,\n      pitch: 45,\n      bearing: -17.6,\n      antialias: true\n    })\n\n    map.on('load', () => {\n      // Insert the layer beneath any symbol layer.\n      var layers = map.getStyle().layers;\n      var labelLayerId;\n      for (var i = 0; i < layers.length; i++) {\n        if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\n          labelLayerId = layers[i].id;\n          break;\n        }\n      }\n\n      const options = {\n        'id': 'add-3d-buildings',\n        'source': 'composite',\n        'source-layer': 'building',\n        'filter': ['==', 'extrude', 'true'],\n        'type': 'fill-extrusion',\n        'minzoom': 15,\n        'paint': {\n          'fill-extrusion-color': '#aaa',\n\n          // Use an 'interpolate' expression to\n          // add a smooth transition effect to\n          // the buildings as the user zooms in.\n          'fill-extrusion-height': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            15,\n            0,\n            15.05,\n            ['get', 'height']\n          ],\n          'fill-extrusion-base': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            15,\n            0,\n            15.05,\n            ['get', 'min_height']\n          ],\n          'fill-extrusion-opacity': 0.6\n        }\n      }\n\n      console.log('1111')\n\n      map.addLayer(options, labelLayerId)\n    });\n  },\n  methods: {\n    onMapLoaded() {\n      // Insert the layer beneath any symbol layer.\n      // const asyncActions = event.component.actions\n\n      // const newParams = await asyncActions.flyTo({\n      //   center: [-74.0066, 40.7135],\n      //   zoom: 15.5,\n      //   pitch: 45,\n      //   bearing: -17.6,\n      //   antialias: true\n      // })\n\n      // console.log('???', event.map)\n\n      // this.map = event.map;\n      // var layers = this.map.getStyle().layers;\n      // var labelLayerId;\n      // for (var i = 0; i < layers.length; i++) {\n      //   if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\n      //     labelLayerId = layers[i].id;\n      //     break;\n      //   }\n      // }\n\n      // const options = {\n      //   'id': 'add-3d-buildings',\n      //   'source': 'composite',\n      //   'source-layer': 'building',\n      //   'filter': ['==', 'extrude', 'true'],\n      //   'type': 'fill-extrusion',\n      //   'minzoom': 15,\n      //   'paint': {\n      //     'fill-extrusion-color': '#aaa',\n\n      //     // Use an 'interpolate' expression to\n      //     // add a smooth transition effect to\n      //     // the buildings as the user zooms in.\n      //     'fill-extrusion-height': [\n      //       'interpolate',\n      //       ['linear'],\n      //       ['zoom'],\n      //       15,\n      //       0,\n      //       15.05,\n      //       ['get', 'height']\n      //     ],\n      //     'fill-extrusion-base': [\n      //       'interpolate',\n      //       ['linear'],\n      //       ['zoom'],\n      //       15,\n      //       0,\n      //       15.05,\n      //       ['get', 'min_height']\n      //     ],\n      //     'fill-extrusion-opacity': 0.6\n      //   }\n      // }\n\n      // console.log('1111')\n\n      // this.map.addLayer(options, labelLayerId)\n    }\n  }\n};\n</script>"],"sourceRoot":""}]}